# This is a basic workflow to help you get started with Actions

name: CMake

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
  # You can convert this to a matrix build if you need cross-platform coverage.
  # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: install gcc-12
        run:   |
         sudo apt update
         sudo apt upgrade
         sudo apt install gcc-12 g++-12
         sudo apt install libfmt-dev


      - name: Configure CMake
        # Configure CMake in a 'build' subdiretory. `CMAKE_BUILD_TYPE` is only requrired if you
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        shell: bash
        env:
          CC:   gcc-12
          CXX:  g++-12

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        # Build your program with the given configuration.
        working-directory: ${{github.workspace}}/build
        # Execute tests difined by the CMake configuration.
        run: ctest -C ${{env.BUILD_TYPE}}
